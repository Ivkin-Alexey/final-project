{"version":3,"sources":["redux/types.js","redux/actions.js","components/PokemonItem.jsx","components/PokemonList.jsx","components/CaughtPokemonList.jsx","components/PokemonInfo.jsx","App.js","redux/pokemonsReducer.js","redux/appReducer.js","redux/rootReducer.js","index.js"],"names":["FETCH_POKEMONS","SET_CARD_ID","SET_NEXT_PAGE_URL","TOGGLE_FETCHING","CATCH_POKEMON","RELEASE_POKEMON","catchPokemon","id","date","Date","toUTCString","type","releasePokemon","PokemonItem","props","str","dispatch","useDispatch","to","onClick","hoverable","style","width","minHeight","cover","alt","src","imgURL","name","split","map","s","charAt","toUpperCase","substring","join","isCaught","e","preventDefault","PokemonList","pokemons","useSelector","state","isFetching","app","fetching","url","useEffect","a","fetch","then","res","json","data","promises","results","result","resultData","string","sprites","other","front_default","types","abilities","ability","weight","Promise","all","payload","next","fetchPokemons","console","log","scrollHandler","target","documentElement","scrollHeight","scrollTop","window","innerHeight","length","document","addEventListener","removeEventListener","marginTop","marginBottom","display","justifyContent","alignItems","size","wrap","poke","index","CaughtPokemonList","height","find","pokemon","PokemonInfo","pokemonID","cardID","properties","Header","Layout","Content","App","backgroundColor","position","zIndex","theme","mode","defaultSelectedKeys","Item","exact","path","element","initialState","rootReducer","combineReducers","action","el","Object","assign","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","loading","StrictMode","render","getElementById"],"mappings":"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","file":"static/js/main.3e4d7f13.chunk.js","sourcesContent":["export const FETCH_POKEMONS = 'FETCH_POKEMONS';\r\nexport const SET_CARD_ID = 'SET_CARD_ID';\r\nexport const SET_NEXT_PAGE_URL = 'SET_NEXT_PAGE_URL';\r\nexport const TOGGLE_FETCHING = 'TOGGLE_FETCHING';\r\nexport const CATCH_POKEMON = 'CATCH_POKEMON';\r\nexport const RELEASE_POKEMON = 'RELEASE_POKEMON';","import {\r\n    CATCH_POKEMON,\r\n    FETCH_POKEMONS, RELEASE_POKEMON,\r\n    SET_CARD_ID,\r\n    SET_NEXT_PAGE_URL,\r\n    TOGGLE_FETCHING\r\n} from \"./types\";\r\n\r\nexport function fetchPokemons(url) {\r\n    return async dispatch => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let promises = data.results.map((result) => {\r\n                    return fetch(result.url)\r\n                        .then(res => res.json())\r\n                        .then(resultData => {\r\n                            return {\r\n                                name: toUpperCase(resultData.name),\r\n                                url: result.url,\r\n                                imgURL: resultData.sprites.other['official-artwork'].front_default,\r\n                                types: resultData.types.map(type => type.type.name).join(', '),\r\n                                abilities: resultData.abilities.map(ability => ability.ability.name).join(', '),\r\n                                weight: resultData.weight,\r\n                                isCaught: false,\r\n                            }\r\n                        })\r\n                })\r\n                Promise.all(promises).then(pokemons => {\r\n                    dispatch({type: FETCH_POKEMONS, payload: pokemons})\r\n                    dispatch({type: SET_NEXT_PAGE_URL, url: data.next})\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nfunction toUpperCase(string) {\r\n    return string\r\n        .split(\" \")\r\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n        .join(\" \");\r\n}\r\n\r\nexport function catchPokemon(id) {\r\n    const date = new Date().toUTCString();\r\n    return {\r\n        type: CATCH_POKEMON, id, date\r\n    }\r\n}\r\n\r\nexport function releasePokemon(id) {\r\n    return {\r\n        type: RELEASE_POKEMON, id\r\n    }\r\n}\r\n\r\nexport function setCardID(id) {\r\n    return {\r\n        type: SET_CARD_ID, id\r\n    }\r\n}\r\n\r\nexport function toggleFetching() {\r\n    return {\r\n        type: TOGGLE_FETCHING\r\n    }\r\n}","import React from \"react\"\r\nimport Card from \"antd/es/card\";\r\nimport Button from \"antd/es/button\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {catchPokemon, releasePokemon, setCardID} from \"../redux/actions\";\r\n\r\nfunction PokemonItem(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function toUpperCase(str) {\r\n        return str\r\n            .split(\" \")\r\n            .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n            .join(\" \");\r\n    }\r\n\r\n    return (\r\n        <Link to='/info' onClick={()=>dispatch(setCardID(props.id))}>\r\n            <Card\r\n                hoverable\r\n                style={{width: 240, minHeight: '357px'}}\r\n                cover={<img alt=\"pokemon\" src={props.imgURL}/>}\r\n            >\r\n                <h4>{`ID ${props.id}, ${toUpperCase(props.name)}`}</h4>\r\n                <p>{props.date ? `Was caught on ${props.date}` : ''}</p>\r\n                {props.isCaught ?\r\n                    <Button type={\"dashed\"} onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(releasePokemon(props.id))}\r\n                    }>Release</Button>\r\n                    :\r\n                    <Button type=\"primary\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(catchPokemon(props.id))}\r\n                    }>Catch!</Button>}\r\n            </Card>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default PokemonItem","import React, {useEffect} from 'react'\r\nimport PokemonItem from \"./PokemonItem\";\r\nimport 'antd/dist/antd.css';\r\nimport {Space} from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {fetchPokemons, toggleFetching} from \"../redux/actions\";\r\n\r\nfunction PokemonList() {\r\n    const dispatch = useDispatch();\r\n\r\n    let pokemons = useSelector(state => state.pokemons.pokemons)\r\n    let isFetching = useSelector(state => state.app.fetching)\r\n    let url = useSelector(state => state.app.url)\r\n\r\n    useEffect(() => {\r\n        if (isFetching) {\r\n            dispatch(fetchPokemons(url));\r\n            console.log(pokemons);\r\n        }\r\n    }, [isFetching,dispatch,url]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const scrollHandler = (e) => {\r\n            const POKEMON_COUNT = 1118\r\n            if ((e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100)\r\n                && pokemons.length < POKEMON_COUNT) {\r\n                dispatch(toggleFetching())\r\n            }\r\n        };\r\n        document.addEventListener(\"scroll\", scrollHandler)\r\n        return function () {\r\n            document.removeEventListener(\"scroll\", scrollHandler)\r\n        }\r\n\r\n    }, [dispatch, pokemons.length])\r\n\r\n    return (\r\n        <Space style={{marginTop: '64px', marginBottom: '64px', display: 'flex', justifyContent: 'center', alignItems: 'center'}} size={[50, 50]} wrap>\r\n            {pokemons[0] ? pokemons.map((poke, index) => {\r\n                return <PokemonItem\r\n                    name={poke.name}\r\n                    imgURL={poke.imgURL}\r\n                    isCaught={poke.isCaught}\r\n                    date={poke.date}\r\n                    key={index}\r\n                    id={index + 1}\r\n                />\r\n            }) : null\r\n            }\r\n        </Space>\r\n    )\r\n}\r\n\r\nexport default PokemonList","import PokemonItem from \"./PokemonItem\";\r\nimport {useSelector} from 'react-redux';\r\nimport Space from \"antd/es/space\";\r\nimport React from \"react\";\r\n\r\nfunction CaughtPokemonList() {\r\n\r\n    let pokemons = useSelector(state => state.pokemons.pokemons);\r\n\r\n    return (\r\n        <Space style={{marginTop: '64px', marginBottom: '64px', height: '100%', display: 'flex',\r\n            justifyContent: 'center', alignItems: 'center'}} size={[50, 50]} wrap>\r\n            {pokemons.find(pokemon=>pokemon.isCaught === true) ? pokemons.map((pokemon,index) => {\r\n                return pokemon.isCaught ?\r\n                <PokemonItem\r\n                    id={index+1}\r\n                    name={pokemon.name}\r\n                    url={pokemon.url}\r\n                    imgURL={pokemon.imgURL}\r\n                    types={pokemon.types}\r\n                    abilities={pokemon.abilities}\r\n                    weight={pokemon.weight}\r\n                    isCaught={pokemon.isCaught}\r\n                    key={index+1}\r\n                /> : null\r\n            }) : <h4>You have not caught pokemons yet!</h4>\r\n            }\r\n        </Space>\r\n    )\r\n}\r\n\r\nexport default CaughtPokemonList","import React from 'react';\r\nimport {Card, Space} from \"antd\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {catchPokemon, releasePokemon} from \"../redux/actions\";\r\nimport Button from \"antd/es/button\";\r\n\r\nconst PokemonInfo = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const pokemonID = useSelector(state => state.pokemons.cardID);\r\n    const properties = useSelector(state => state.pokemons.pokemons[pokemonID - 1]);\r\n\r\n\r\n    return (\r\n        <Space style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            height: 'calc(100vh - 64px)'\r\n        }} size={[50, 50]}>\r\n                <Card\r\n                    hoverable\r\n                    style={{height: '730px', width: '475px'}}\r\n                    cover={<img alt=\"pokemon\" src={properties.imgURL}/>}\r\n                >\r\n                    <h4>ID: {pokemonID}, {properties.name}</h4>\r\n                    <p>Abilities: {properties.abilities}</p>\r\n                    <p>Types: {properties.types}</p>\r\n                    <p>Weight: {properties.weight}</p>\r\n                    <p>{properties.isCaught ? `Was caught on ${properties.date}` : ''}</p>\r\n                    {properties.isCaught ?\r\n                        <Button type={\"dashed\"} onClick={(e) => {\r\n                            e.preventDefault();\r\n                            dispatch(releasePokemon(pokemonID))\r\n                        }\r\n                        }>Release</Button>\r\n                        :\r\n                        <Button type=\"primary\" onClick={(e) => {\r\n                            e.preventDefault();\r\n                            dispatch(catchPokemon(pokemonID))\r\n                        }\r\n                        }>Catch!</Button>}\r\n                </Card>\r\n        </Space>\r\n    )\r\n}\r\n\r\nexport default PokemonInfo","import React from 'react';\nimport PokemonList from \"./components/PokemonList\";\nimport CaughtPokemonList from \"./components/CaughtPokemonList\";\nimport PokemonInfo from \"./components/PokemonInfo\"\nimport 'antd/dist/antd.css';\n\nimport {Layout, Menu} from 'antd';\nimport {Link, Route, Routes} from \"react-router-dom\";\n\nconst {Header, Content} = Layout;\n\nfunction App() {\n\n    return (\n        <Layout style={{backgroundColor: 'white'}}>\n            <Header style={{position: 'fixed', zIndex: '10', width: '100%'}}>\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n                    <Menu.Item key=\"1\">\n                        <Link to='/'>All pokemons</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\">\n                        <Link to='/caughtPokemons'>Caught pokemons</Link>\n                    </Menu.Item>\n                </Menu>\n            </Header>\n            <Content style={{marginTop: '64px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                    <Routes>\n                        <Route exact path=\"/\" element={<PokemonList/>}/>\n                        <Route exact path=\"/caughtPokemons\" element={<CaughtPokemonList/>}/>\n                        <Route exact path=\"/info\" element={<PokemonInfo/>}/>\n                    </Routes>\n            </Content>\n        </Layout>\n    );\n}\n\nexport default App;\n","import {CATCH_POKEMON, FETCH_POKEMONS, RELEASE_POKEMON, SET_CARD_ID} from \"./types\";\r\n\r\nconst initialState = {\r\n    pokemons: [],\r\n    cardID: null\r\n}\r\n\r\nexport const pokemonsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_POKEMONS:\r\n            return {...state, pokemons: [...state.pokemons, ...action.payload]}\r\n        case SET_CARD_ID:\r\n            return {...state, cardID: action.id}\r\n        case CATCH_POKEMON:\r\n            return {\r\n                ...state, pokemons: state.pokemons.map((el,index) => {\r\n                    if (index+1 === action.id) {\r\n                        return Object.assign({}, el, {\r\n                            isCaught: true,\r\n                            date: action.date})\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        case RELEASE_POKEMON:\r\n            return {\r\n                ...state, pokemons: state.pokemons.map((el,index) => {\r\n                    if (index+1 === action.id) {\r\n                        return Object.assign({}, el, {\r\n                            isCaught: false,\r\n                            date: action.date})\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {SET_NEXT_PAGE_URL, TOGGLE_FETCHING} from \"./types\";\r\n\r\nconst initialState = {\r\n    url: 'https://pokeapi.co/api/v2/pokemon?limit=12',\r\n    fetching: true\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_NEXT_PAGE_URL:\r\n            return {url: action.url, fetching: false}\r\n        case TOGGLE_FETCHING:\r\n            return {...state, fetching: true}\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {pokemonsReducer} from \"./pokemonsReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    pokemons: pokemonsReducer,\r\n    app: appReducer\r\n})","import React from 'react';\nimport {render} from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport App from './App';\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport {rootReducer} from \"./redux/rootReducer\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nlet store = createStore(persistedReducer, compose(\n    applyMiddleware(\n        thunk\n    ),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nlet persistor = persistStore(store)\n\nconst app = (\n    <PersistGate loading={null} persistor={persistor}>\n    <Provider store={store}>\n        <React.StrictMode>\n            <Router>\n                <App/>\n            </Router>\n        </React.StrictMode>\n    </Provider>\n    </PersistGate>\n)\n\nrender(app, document.getElementById('root')\n);\n\n"],"sourceRoot":""}